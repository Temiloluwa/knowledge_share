{
	"name": "ProcessJiraGitData",
	"properties": {
		"description": "Notebook to process Jira dimension table",
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "kssparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "ef6b6d4f-3ef9-4d94-a000-8bdaa2299cab"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/10589681-5ffc-4c04-bc50-3f3b976aaea9/resourceGroups/temmie-rg/providers/Microsoft.Synapse/workspaces/ks-azure-synapse-ws/bigDataPools/kssparkpool",
				"name": "kssparkpool",
				"type": "Spark",
				"endpoint": "https://ks-azure-synapse-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/kssparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import pandas as pd\n",
					"from datetime import datetime"
				],
				"execution_count": 17
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create Path Variables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"ParSourceFolderName = \"bronze/jira_git_fact\"\n",
					"ParSourceFileName = \"jira_git_fact.csv\"\n",
					"ParDestFolderName = \"gold/jira_git_fact\"\n",
					"ParDestFileName = \"jira_git_dimension.parquet\""
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def create_abfss_uri(folder_name, file_name,storage_account_name=\"ksazuresynapse\", container_name=\"mydatalake\"):\n",
					"    return f\"abfss://{container_name}@{storage_account_name}.dfs.core.windows.net/{folder_name}/{file_name}\"\n",
					"\n",
					"\n",
					"\n",
					"source_folder_name = f\"{ParSourceFolderName}\"\n",
					"source_file_name = f\"{ParSourceFileName}\"\n",
					"destination_folder_name = f\"{ParDestFolderName}\"\n",
					"destination_file_name = f\"{ParDestFileName}\""
				],
				"execution_count": 19
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Preprocess Data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"source_path = create_abfss_uri(source_folder_name, source_file_name)\n",
					"print(f\"Source Path: {source_path}\")\n",
					"source_dataframe = pd.read_csv(source_path)\n",
					"print(f\"Loaded data @ {source_path}\")\n",
					"source_dataframe.head()"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def process_timestamp(row):\n",
					"    datetime_object = datetime.strptime(row, \"%Y-%m-%d %H:%M:%S.%f\")\n",
					"    return datetime_object.strftime(\"%Y-%m-%dT%H:%M:%SZ\")\n",
					"\n",
					"# Make JiraGitKey Unique\n",
					"source_dataframe.drop(columns=[\"JiraGitKey\"], inplace=True)\n",
					"source_dataframe = source_dataframe.reset_index()\n",
					"source_dataframe = source_dataframe.rename(columns={\"index\": \"JiraGitKey\"})\n",
					"\n",
					"# Process Commit Time\n",
					"source_dataframe.CommitTime = source_dataframe.CommitTime.apply(process_timestamp)\n",
					"\n",
					"# Convert int64 to int32\n",
					"for col in [\"JiraGitKey\", \"StoryPoint\", \"DeveloperKey\"]:\n",
					"    source_dataframe[col] = source_dataframe[col].astype(\"int32\")\n",
					"\n",
					"source_dataframe.head()"
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"source_dataframe.info()"
				],
				"execution_count": 22
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Save DataFrame"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"destination_path = create_abfss_uri(destination_folder_name, destination_file_name)\n",
					"source_dataframe.to_parquet(destination_path, index=False, compression=\"snappy\")\n",
					"print(f\"Saved data @ {destination_path}\")"
				],
				"execution_count": 23
			}
		]
	}
}